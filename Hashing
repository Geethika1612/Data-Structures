#include <stdio.h>

#include <stdlib.h>

#include <stdbool.h>

#define MAX_SIZE 100

typedef struct Node {

int value;

struct Node* next;

} Node;

typedef struct {

Node* table[MAX_SIZE];

int size;

} HashMap;

HashMap* createHashMap() {

HashMap* hashMap = (HashMap*)malloc(sizeof(HashMap));

for (int i = 0; i < MAX_SIZE; i++) {

hashMap->table[i] = NULL;

}

hashMap->size = 0;

return hashMap;

}

int hash(int key) {

return key % MAX_SIZE;

}

void insert(HashMap* hashMap, int key) {

int index = hash(key);

Node* newNode = (Node*)malloc(sizeof(Node));

newNode->value = key;

newNode->next = hashMap->table[index];

hashMap->table[index] = newNode;

hashMap->size++;

}

bool search(HashMap* hashMap, int key) {

int index = hash(key);

Node* current = hashMap->table[index];

while (current != NULL) {

if (current->value == key) {

return true;

}

current = current->next;
